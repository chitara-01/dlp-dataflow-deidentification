name: Java CI with Gradle

on:
  push:
    branches:
      - ci_workflow

jobs:
#   build:
#     runs-on: 
#       - self-hosted
#       - gh-test-2

#     steps:
#       - uses: actions/checkout@v2

#       - name: Setup Java
#         uses: actions/setup-java@v1
#         with:
#           java-version: 11
      
#       - name: Setup Gradle
#         uses: gradle/gradle-build-action@v2
      
#       - name: Get Project ID
#         run: echo $(gcloud config get-value project)
      
#       - run: gradle run -DmainClass=com.google.swarm.tokenization.DLPTextToBigQueryStreamingV2 -Pargs=" --region=us-central1 --project=muskan-dlp-test-local3 --streaming --enableStreamingEngine --tempLocation=gs://muskan-dlp-test-local3-demo-data/temp --numWorkers=2 --maxNumWorkers=3 --runner=DataflowRunner --filePattern=gs://muskan-dlp-test-local3-demo-data/*.csv --dataset=gh_test_2  --inspectTemplateName=projects/muskan-dlp-test-local3/locations/global/inspectTemplates/dlp-demo-inspect-latest-1680688062701 --deidentifyTemplateName=projects/muskan-dlp-test-local3/locations/global/deidentifyTemplates/dlp-demo-deid-latest-1680688062701 --batchSize=200000 --DLPMethod=DEID"
      
  bq:
    runs-on: 
      - self-hosted
      - gh-test-2

    steps:
      - uses: actions/checkout@v2
      
#       - name: sleep
#         run: sleep 5m

      - name: Query BQ
        run: |
          table_count = $(($(bq query --use_legacy_sql=false --format csv 'SELECT * FROM `muskan-dlp-test-local3.gh_test_2`.__TABLES__'  | wc -l ) -1))
          echo "The number of tables in gh_test_2 are $table_count ."
          if [[ "$table_count" == 5 ]]; then
            echo "DONE"
          fi
        
#       - name: Install BQ library
#         run: |
#           bq_library=$(which bq)
#           if [[ -z $bq_library ]]; then
#             echo "Error: Could not find the bq command-line tool."
#             exit 1
#           fi
#           tables=$(bq ls)
#           for table in $tables; do
#             rows=$(bq show --format=tablerows $table | wc -l)
#             if [[ $rows -eq 0 ]]; then
#               echo "Table $table is empty."
#             fi
#           done
          
#       - name: Print RESULT
#         run: echo "The number of tables is $TABLE_COUNT"
        
#       - name: conditional
#         run: |
#           if [[ "$TABLE_COUNT" == "5" ]]; then
#             echo "row_count=$(bq query --use_legacy_sql=false 'SELECT COUNT(*) FROM `muskan-dlp-test-local3.gh_test_2.CCRecords_1564602825`')"
#             echo "The number of rows in CCRecords_1564602825 result is $row_count"
#           else
#             echo "RETRY"
#           fi
      
#       - name: Sleep for 5 minutes
#         run: sleep 5m
#         shell: bash
      
#       - name: Query BQ
#         run: bq query --use_legacy_sql=false 'SELECT COUNT(*) FROM `muskan-dlp-test-local3.gh_test_2.CCRecords_1564602825`'
      
#       - name: Store results in variable
#         run: export RESULT=$(bq query --use_legacy_sql=false 'SELECT COUNT(*) FROM `muskan-dlp-test-local3.gh_test_2.CCRecords_1564602825`')
      
#       - name: Print RESULT
#         run: echo $(RESULT)
